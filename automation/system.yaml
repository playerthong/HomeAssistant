- alias: "Startup Notification"
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: notify.telegram_log
      data:
       message: 'Home assistant перезагрузился'
    - delay: 00:01  # Waits 5 minutes
    - service: homekit.start
    - service: notify.telegram_log
      data:
       message: 'HomeKit запущен'

- alias: 'Travis failed'
  trigger:
    platform: state
    entity_id: sensor.gurskiyhomeassistant_last_build_state
    to: 'failed'
  action:
    - service: notify.telegram_log
      data:
       message: 'Travis не смог собрать проект'

- alias: 'Update config if travis build is successfull'
  trigger:
    platform: state
    entity_id: sensor.gurskiyhomeassistant_last_build_state
    to: 'passed'
  action:
    - service: notify.telegram_log
      data:
       message: 'Travis успешно собрал проект, делаем git pull и перезагружаемся'
    - service: shell_command.git_pull
    - delay: 0:01
    - service: homeassistant.restart

- alias: "Update Notification"
  trigger:
    platform: state
    entity_id: updater.updater
  condition:
    - condition: template
      value_template: "{{ states('updater.updater') != 'unknown' }}"
  action:
    - service: notify.telegram_log
      data:
       message: 'Travis успешно собрал проект, делаем git pull и перезагружаемся'

- alias: Login Failure
  trigger:
    platform: template
    value_template: "{{ states('persistent_notification.httplogin') != 'unknown' }}"
  action:
    - service: notify.telegram_log
      data:
       message: 'Неверно введен пароль'

- alias: HA Update Available
  trigger:
    - platform: state
      entity_id: sensor.ha_last_version
  condition:
    - condition: template
      value_template: '{{ states.ha_last_version.state != states.ha_current_version.state }}'
  action:
    service: notify.telegram_log
    data_template:
      message: "{{ '\u267B\uFE0F' }} Новая версия *Home Assistant {{ states.sensor.ha_last_version.state }}* доступна для обновления"      



- alias: HA error notify
  trigger:
    platform: event
    event_type: system_log_event
  condition:
    condition: template
    value_template: '{{ "service" in trigger.event.data.message }}'
  action:
    service: notify.telegram_log
    data_template:
      message: "{{ '\u267B\uFE0F' }} Ошибка {{ trigger.event.data.message }}"      

- alias: 'SSL expiry notification'
  trigger:
    platform: numeric_state
    entity_id: sensor.ssl_cert_expiry
    below: 21
  action:
    service: notify.telegram_log
    data:
      message: 'Warning - SSL certificate expires in 21 days and has not been automatically renewed'

- alias: 'Auto Renew SSL Cert'
  trigger:
    platform: numeric_state
    entity_id: sensor.ssl_cert_expiry
    below: 29
  action:
    - service: notify.telegram_log
      data:
        message: 'Autorenew ssl'
    - service: shell_command.renew_ssl

#- alias: telegram test at 10:00
#  trigger:
#    platform: time
#    at: '10:00:00'
#  action:
#   - service: notify.telegram
#     data:
#      message: 'Утренняя проверка работоспособности telegram '
      
# - alias: System - New device connected
#   trigger:
#     - platform: event
#       event_type: device_tracker_new_device
#   action:
#     - service: notify.notify
#       data:
#        message: '{{trigger.event.data.host_name}}'

#- alias: 'Start HomeKit'
#  trigger:
#    platform: homeassistant
#    event: start
#  action:
#    - delay: 00:02  # Waits 5 minutes
#    - service: homekit.start


#- alias: Start HomeKit
#  trigger:
#    platform: template
#    value_template: "{{ states('устройство_aqara') != 'unknown' and states('устройство_mqtt') != 'unknown'}}"
#  action:
#    - service: homekit.start
#    - service: automation.turn_off
#      entity_id: automation.start_homekit
#
#- alias: Start HAss
#  trigger:
#    platform: homeassistant
#    event: start
#  action:
#    - service: automation.turn_on
#      entity_id: automation.start_homekit

#- alias: Stop
#  trigger:
#    platform: homeassistant
#    event: shutdown
#  action:
#    - service: mqtt.publish
#      data:
#        topic: "hass/status"
#        retain: true
#        payload: "offline"
#    - service: shell_command.beep_stop